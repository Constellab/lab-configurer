services:

  # Production Glab
  lab_manager:
    image: constellab/lab-manager:${LAB_MANAGER_VERSION}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /app:/app
    environment:
      - VOLUME_PATH=/app/conf
      - LOG_PATH=/app/lab_manager/logs
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LAB_MANAGER_API_KEY=${LAB_MANAGER_API_KEY}
      - ENVIRONMENT_PROFILE=${ENVIRONMENT_PROFILE} # pre-prod or prod
      - AUTO_START_LAB=true
    labels:
      - "traefik.enable=true"
      # Config for the HTTPS glab domain to port 3080
      - "traefik.http.routers.lab-manager-router.rule=host(`lab-manager.${VIRTUAL_HOST}`)"
      - "traefik.http.routers.lab-manager-router.service=lab-manager-service"
      - "traefik.http.services.lab-manager-service.loadbalancer.server.port=3080"
      # Enable HTTPS
      - "traefik.http.routers.lab-manager-router.entrypoints=websecure"
      - "traefik.http.routers.lab-manager-router.tls.certresolver=myresolver"
      - "traefik.http.routers.lab-manager-router.tls=true"

      # Here define the domains for the TLS certificate
      # This make the reverse proxy generate a wildcard certificate for all subdomains
      - "traefik.http.routers.lab-manager-router.tls.domains[0].main=*.${VIRTUAL_HOST}"    # Covers all subdomains
    networks:
      - gencovery-network-manager
    restart: always
    container_name: lab_manager

  # Traefik reverse proxy
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.11.0
    command:
      # So that Traefik can listen to the Docker events
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Enable HTTPS
      - "--entrypoints.websecure.address=:443"
      # Change from tlschallenge to dnschallenge with Space API
      # We need to use DNS challenge to get wildcard certificates
      # to limit the number of requests of certificates to Let's Encrypt
      # as the limit for a domain is 50 per week
      - "--certificatesresolvers.myresolver.acme.dnschallenge=${DNS_CHALLENGE_ENABLED:-'false'}"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=${DNS_CHALLENGE_PROVIDER:-httpreq}"
      - "--certificatesresolvers.myresolver.acme.email=admin@gencovery.com"
      # Email for let's encrypt
      - "--certificatesresolvers.myresolver.acme.email=admin@gencovery.com"
      # Json file to store certificate
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      # Redirect HTTP to HTTPS
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"

    
      #- "--log.level=DEBUG"
    environment:
      # Define the HTTP request endpoint for DNS challenges
      # This endpoint should be provided by the Space API
      - "HTTPREQ_ENDPOINT=${DNS_CHALLENGE_ROUTE}"
    ports:
      - "443:443"
      - "80:80"
    volumes:
      # Volume to store the lets encrypt certificats
      - /srv/letsencrypt:/letsencrypt
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gencovery-network-manager
      - gencovery-network-dev
      - gencovery-network-prod
    restart: always
    container_name: reverse_proxy

networks:
  gencovery-network-manager:
    external: true
  gencovery-network-dev:
    external: true
  gencovery-network-prod:
    external: true
